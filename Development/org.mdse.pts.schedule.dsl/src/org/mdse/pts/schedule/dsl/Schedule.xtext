grammar org.mdse.pts.schedule.dsl.Schedule hidden(WS, ML_COMMENT, SL_COMMENT)

import "http://mdse.org/pts/network" as network
import "http://mdse.org/pts/depot" as depot
import "http://mdse.org/pts/schedule"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://mdse.org/pts/time" as time

Schedule:
	"schedule" "for" network=[network::Network] "with" depot+=[depot::Root] ("," depot+=[depot::Root])* ";"
	(trains+=TrainSchedule ";")*
;


TrainSchedule:
	"schedule" "train" train=[depot::Train] "on"
		starttimes+=StartTime ("and" starttimes+=StartTime)*
		":"
		stops+=StartAtStop
		(stops+=(ViaStop|NormalStop))*
		stops+=(TerminalStop|ViaTerminalStop)
;

StartAtStop returns Stop:
	"start" "at" station=[network::Station|STRING] "on" "platform" platform=STRING 
;

ViaStop returns Stop:
	"drive" "via" via=[network::Leg|STRING] "and" "stop" "at" station=[network::Station|STRING] 
	"on" "platform" platform=STRING "for" stoppedTime=INT "min" ("and" rotate?=("reverse"))?
;

NormalStop returns Stop:
	"stop" "at" station=[network::Station|STRING] "on" "platform" platform=STRING "for" stoppedTime=INT "min" ("and" rotate?=("reverse"))?
;

TerminalStop returns Stop:
	"terminate" "at" station=[network::Station|STRING] "on" "platform" platform=STRING
;

ViaTerminalStop returns Stop:
	"drive" "via" via=[network::Leg|STRING] "and" "terminate" "at" station=[network::Station|STRING] "on" "platform" platform=STRING
;

StartTime:
	weekdays+=Weekday ("," weekdays+=Weekday)*
	"at" timestamps+=Time ("," timestamps+=Time)*
;

Time:
	hour=INT ":" minute=INT
;

enum Weekday returns time::Weekday:
	Monday="Monday" |
	Tuesday="Tuesday" |
	Wednesday="Wednesday" |
	Thursday="Thursday" |
	Friday="Friday" |
	Saturday="Saturday" |
	Sunday="Sunday"
;

terminal fragment LETTER:
	('a'..'z' | 'A'..'Z')
;

terminal fragment DIGIT:
	('0'..'9')
;

terminal ID:
	'^'?('_' | LETTER) ('_' | LETTER | DIGIT )*
;

terminal INT returns ecore::EInt:
	DIGIT+
;

terminal STRING:
	'"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"'
;

terminal ML_COMMENT:
	'/*' -> '*/'
;

terminal SL_COMMENT:
	'//' !('\n'|'\r')* ('\r'? '\n')?
;

terminal WS:
	(' '|'\t'|'\r'|'\n')+
;