/*
 * generated by Xtext 2.27.0-SNAPSHOT
 */
package org.mdse.pts.schedule.dsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.mdse.pts.schedule.dsl.ide.contentassist.antlr.internal.InternalScheduleParser;
import org.mdse.pts.schedule.dsl.services.ScheduleGrammarAccess;

public class ScheduleParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(ScheduleGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, ScheduleGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getTrainScheduleAccess().getStopsAlternatives_8_0(), "rule__TrainSchedule__StopsAlternatives_8_0");
			builder.put(grammarAccess.getWeekdayAccess().getAlternatives(), "rule__Weekday__Alternatives");
			builder.put(grammarAccess.getScheduleAccess().getGroup(), "rule__Schedule__Group__0");
			builder.put(grammarAccess.getScheduleAccess().getGroup_5(), "rule__Schedule__Group_5__0");
			builder.put(grammarAccess.getScheduleAccess().getGroup_7(), "rule__Schedule__Group_7__0");
			builder.put(grammarAccess.getTrainScheduleAccess().getGroup(), "rule__TrainSchedule__Group__0");
			builder.put(grammarAccess.getTrainScheduleAccess().getGroup_5(), "rule__TrainSchedule__Group_5__0");
			builder.put(grammarAccess.getStartAtStopAccess().getGroup(), "rule__StartAtStop__Group__0");
			builder.put(grammarAccess.getViaStopAccess().getGroup(), "rule__ViaStop__Group__0");
			builder.put(grammarAccess.getViaStopAccess().getGroup_13(), "rule__ViaStop__Group_13__0");
			builder.put(grammarAccess.getNormalStopAccess().getGroup(), "rule__NormalStop__Group__0");
			builder.put(grammarAccess.getNormalStopAccess().getGroup_9(), "rule__NormalStop__Group_9__0");
			builder.put(grammarAccess.getTerminalStopAccess().getGroup(), "rule__TerminalStop__Group__0");
			builder.put(grammarAccess.getStartTimeAccess().getGroup(), "rule__StartTime__Group__0");
			builder.put(grammarAccess.getStartTimeAccess().getGroup_1(), "rule__StartTime__Group_1__0");
			builder.put(grammarAccess.getStartTimeAccess().getGroup_4(), "rule__StartTime__Group_4__0");
			builder.put(grammarAccess.getTimeAccess().getGroup(), "rule__Time__Group__0");
			builder.put(grammarAccess.getScheduleAccess().getNetworkAssignment_2(), "rule__Schedule__NetworkAssignment_2");
			builder.put(grammarAccess.getScheduleAccess().getDepotAssignment_4(), "rule__Schedule__DepotAssignment_4");
			builder.put(grammarAccess.getScheduleAccess().getDepotAssignment_5_1(), "rule__Schedule__DepotAssignment_5_1");
			builder.put(grammarAccess.getScheduleAccess().getTrainsAssignment_7_0(), "rule__Schedule__TrainsAssignment_7_0");
			builder.put(grammarAccess.getTrainScheduleAccess().getTrainAssignment_2(), "rule__TrainSchedule__TrainAssignment_2");
			builder.put(grammarAccess.getTrainScheduleAccess().getStarttimesAssignment_4(), "rule__TrainSchedule__StarttimesAssignment_4");
			builder.put(grammarAccess.getTrainScheduleAccess().getStarttimesAssignment_5_1(), "rule__TrainSchedule__StarttimesAssignment_5_1");
			builder.put(grammarAccess.getTrainScheduleAccess().getStopsAssignment_7(), "rule__TrainSchedule__StopsAssignment_7");
			builder.put(grammarAccess.getTrainScheduleAccess().getStopsAssignment_8(), "rule__TrainSchedule__StopsAssignment_8");
			builder.put(grammarAccess.getTrainScheduleAccess().getStopsAssignment_9(), "rule__TrainSchedule__StopsAssignment_9");
			builder.put(grammarAccess.getStartAtStopAccess().getStationAssignment_2(), "rule__StartAtStop__StationAssignment_2");
			builder.put(grammarAccess.getStartAtStopAccess().getPlatformAssignment_5(), "rule__StartAtStop__PlatformAssignment_5");
			builder.put(grammarAccess.getViaStopAccess().getViaAssignment_2(), "rule__ViaStop__ViaAssignment_2");
			builder.put(grammarAccess.getViaStopAccess().getStationAssignment_6(), "rule__ViaStop__StationAssignment_6");
			builder.put(grammarAccess.getViaStopAccess().getPlatformAssignment_9(), "rule__ViaStop__PlatformAssignment_9");
			builder.put(grammarAccess.getViaStopAccess().getStoppedTimeAssignment_11(), "rule__ViaStop__StoppedTimeAssignment_11");
			builder.put(grammarAccess.getViaStopAccess().getRotateAssignment_13_1(), "rule__ViaStop__RotateAssignment_13_1");
			builder.put(grammarAccess.getNormalStopAccess().getStationAssignment_2(), "rule__NormalStop__StationAssignment_2");
			builder.put(grammarAccess.getNormalStopAccess().getPlatformAssignment_5(), "rule__NormalStop__PlatformAssignment_5");
			builder.put(grammarAccess.getNormalStopAccess().getStoppedTimeAssignment_7(), "rule__NormalStop__StoppedTimeAssignment_7");
			builder.put(grammarAccess.getNormalStopAccess().getRotateAssignment_9_1(), "rule__NormalStop__RotateAssignment_9_1");
			builder.put(grammarAccess.getTerminalStopAccess().getStationAssignment_2(), "rule__TerminalStop__StationAssignment_2");
			builder.put(grammarAccess.getTerminalStopAccess().getPlatformAssignment_5(), "rule__TerminalStop__PlatformAssignment_5");
			builder.put(grammarAccess.getStartTimeAccess().getWeekdaysAssignment_0(), "rule__StartTime__WeekdaysAssignment_0");
			builder.put(grammarAccess.getStartTimeAccess().getWeekdaysAssignment_1_1(), "rule__StartTime__WeekdaysAssignment_1_1");
			builder.put(grammarAccess.getStartTimeAccess().getTimestampsAssignment_3(), "rule__StartTime__TimestampsAssignment_3");
			builder.put(grammarAccess.getStartTimeAccess().getTimestampsAssignment_4_1(), "rule__StartTime__TimestampsAssignment_4_1");
			builder.put(grammarAccess.getTimeAccess().getHourAssignment_0(), "rule__Time__HourAssignment_0");
			builder.put(grammarAccess.getTimeAccess().getMinuteAssignment_2(), "rule__Time__MinuteAssignment_2");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private ScheduleGrammarAccess grammarAccess;

	@Override
	protected InternalScheduleParser createParser() {
		InternalScheduleParser result = new InternalScheduleParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ScheduleGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ScheduleGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
